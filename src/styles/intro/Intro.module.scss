@import './variables.scss';
@import './Snow.module.scss';
@import './Wave.module.scss';

.wrapper {
  position: relative;
  width: auto;
  max-width: none;
  height: calc(100dvh + $wave-height);
  margin: 0;
  padding: 0;
  overflow: hidden;
}

.title_wrapper {
  @include flex();
  flex-direction: column;
  height: calc(100dvh - $common-padding * 2);
  padding: 72px 0;
  background-color: $color-black;
}

@keyframes stretchFromCenter {
  0% {
    width: 0;
  }
  100% {
    width: 70dvw;
  }
}

@keyframes fadeIn {
  0% {
    opacity: 0;
  }
  100% {
    opacity: 1;
  }
}

.bar {
  flex-shrink: 0;
  position: relative;
  width: 0;
  max-width: $size-default;
  height: 8px;
  background-color: $color-white;
  animation: stretchFromCenter 2s 4s forwards;
  &::before,
  &::after {
    @include absolute(null, null, 4px, null);
    display: inline-block;
    width: 70px;
    height: 64px;
    opacity: 0;
    animation: fadeIn 0.5s 5s forwards;
    content: '';
  }
  &::before {
    left: 4px;
    background: url('/img/tree_left.svg') center bottom no-repeat;
    background-size: contain;
  }
  &::after {
    right: 4px;
    background: url('/img/tree_right.svg') center bottom no-repeat;
    background-size: contain;
  }
  @media (max-width: $size-m) {
    & {
      height: 4px;
    }
    &::before,
    &::after {
      bottom: 0;
      width: 52px;
      height: 36px;
    }
  }
}

@keyframes scrollDown {
  0% {
    opacity: 0;
    transform: translateY(0);
  }
  20% {
    opacity: 1;
    transform: translateY(0);
  }
  100% {
    opacity: 0;
    transform: translateY(10px);
  }
}

.mouse {
  flex-shrink: 0;
  position: relative;
  margin-top: 100px;
  width: 30px;
  height: 50px;
  border: 2px solid $color-white;
  border-radius: 20px;
  opacity: 0;
  animation: fadeIn 1s 5.5s forwards;
  &::before {
    content: '';
    position: absolute;
    top: 10px;
    left: 13px;
    width: 4px;
    height: 12px;
    background-color: $color-white;
    border-radius: 4px;
    opacity: 0;
    animation: scrollDown 1.5s 6s linear infinite;
  }
}
